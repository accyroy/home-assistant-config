# test test test
homeassistant:
  # Name of the location where Home Assistant is running
  name: !secret homeassistant_name
  # Location required to calculate the time the sun rises and sets
  latitude: !secret homeassistant_lat
  longitude: !secret homeassistant_lon
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret homeassistant_elevation
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/London
  customize: !include customize.yaml
  
    
    
# Show links to resources in log and frontend
#introduction:

# Enables the frontend
frontend:

input_boolean: !include input_boolean.yaml
  
emulated_hue:
  host_ip: 192.168.1.131
  listen_port: 8300
  off_maps_to_on_domains:
    - script
    - scene
  expose_by_default: false
  exposed_domains:
    - light

http:
  # Uncomment this to add a password (recommended!)
  api_password: !secret http_api_password
  server_port: !secret http_server_port
  ssl_certificate: !secret http_ssl_certificate
  ssl_key: !secret http_ssl_key
  base_url: !secret http_base_url


script:
  nina_energize:
    sequence:
      - service: light.hue_activate_scene
        data:
          group_name: "Ninas Room"
          scene_name: "Energize"

  nina_nightlight:
    sequence:
      - service: light.hue_activate_scene
        data:
          group_name: "Ninas Room"
          scene_name: "Nightlight"

group: !include groups.yaml

config:

tts:
  - platform: google
    cache: true
    cache_dir: /tmp/tts
    time_memory: 300

# Checks for available updates
updater:


# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time.
history:

recorder:
  db_url: !secret recorder_db_url

# View all events in a logbook
logbook:

# Track the sun
sun:

netatmo:
  api_key: !secret netatmo_api_key
  secret_key: !secret netatmo_secret_key
  username: !secret netatmo_username
  password: !secret netatmo_password
  
notify:
  - name: email
    platform: smtp
    server: !secret smtp_server
    sender: !secret smtp_sender
    username: !secret smtp_username
    password: !secret smtp_password
    recipient: !secret smtp_recipient


sensor:
  - platform: yr
  - platform: mqtt
    name: "Unit Status"
    state_topic: "unit/status"
  - platform: mqtt
    name: "Unit Temperature"
    state_topic: "unit/temperature"
    unit_of_measurement: "Â°C"
  - platform: mqtt
    name: "Unit Humidity"
    state_topic: "unit/humidity"
    unit_of_measurement: "%"
  - platform: command_line
    name: Occasion
    command: "python3 /home/roy/.homeassistant/occasion.py" 
  - platform: xbox_live
    api_key: 495dde1dd513e5e82ad12a10bd556c801a000dfe
    xuid:
      - 2533274794698087
  - platform: template
    sensors:
      xbox_status:
        value_template: '{% if is_state("sensor.darthchickens", "Offline") %}Offline{% else %}{{ states.sensor.darthchickens.attributes["XboxOne Full"] }}{% endif %}'
        friendly_name: Xbox Status


binary_sensor:
  - platform: template
    sensors:
      unit_online:
        value_template: "{{ states.sensor.unit_status.state == 'online' }}"
        device_class: connectivity
        friendly_name: "Unit Status"
        
        
# automation: !include_dir_list automation 
automation: !include automations.yaml

ios:

nest:
  client_id: !secret nest_username
  client_secret: !secret nest_password


climate:
  platform: nest
  
light:
  - platform: hue
    host: 192.168.1.153
  
zwave:
  usb_path: /dev/zwave
  new_entity_ids: false
  device_config: !include zwave_device_config.yaml




mqtt: !include mqtt.yaml
scene: !include scenes.yaml

alarm_control_panel:
  - platform: manual
    name: Alarm
    code: !secret alarm_control_panel_code
    pending_time: 10
    trigger_time: 10


device_tracker:
  - platform: owntracks
    max_gps_accuracy: 200

zone: !include_dir_list zone

camera: !include cameras.yaml

# Example configuration.yaml entry
alexa:
  intents:
    WhereAreWeIntent:
      speech:
        type: plaintext
        text: >
          {%- if is_state('device_tracker.roy_thephone', 'home') and
                 is_state('device_tracker.nina_iphone', 'home') -%}
            You are both home, you silly billy
          {%- else -%}
            Roy is at {{ states("device_tracker.roy_thephone") }}
            Nina is at {{ states("device_tracker.nina_iphone") }}
          {% endif %}

    LocateIntent:
#      action:
#        service: notify.notify
#        data_template:
#          message: The location of {{ User }} has been queried via Alexa.
      speech:
        type: plaintext
        text: >
          {%- for state in states.device_tracker -%}
            {%- if state.name.lower() == User.lower() -%}
              {{ state.name }} is at {{ state.state }}
            {%- endif -%}
          {%- else -%}
            I am sorry, I do not know where {{ User }} is.
          {%- endfor -%}
      card:
        type: simple
        title: Sample title
        content: Some more content
